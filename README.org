* SDLO 
** Simple DirectMedia Layer ObjectOriented

*** A *C++* wrapper around [[https://www.libsdl.org/][SDL]] cross-platform development library.

** Dependencies
   *SDLO* is intend to work with all *SDL2* major versions.
   Other libraries such as [[https://www.libsdl.org/projects/SDL_image/][SDL_image]] and [[https://www.libsdl.org/projects/SDL_ttf/][SDL_ttf]] work too.

** Build library
   To *build* the shared library, use *GNU make* utility.

** To install
   Use *sudo make install*.

   There's no configure file yet. If you don't want to use *SDL_image*,
   remove the *#include <SDL2/SDL_image.h>* macro in *SDL.hpp*, and
   remove *lSDL2_image* in *LIBS* from *MakeFile*.

** Testings
 *SDLO* uses [[https://github.com/philsquared/Catch][Catch]] for its testing.

 To *run* tests, use *make tests*.

 To *create* tests, you simply have to create a *.cpp* file under the directory *tests/src*. 

** Documentation

   *SDLO* uses [[http://www.stack.nl/~dimitri/doxygen/][Doxygen]] to generate its documentation.

   To *generate* documentaion, use *make doc*.

** Namespace & function's name

   To make *SDLO* easier to use, every class wrapper use the (almost) same 
   documentation provided by the SDL's [[https://wiki.libsdl.org/][Wiki]].

   Every other none wrapper classes/functions offered by *SDLO* follow the exact same documentation style.
   Also, to ensure no name collision, everything is wrap in namespace *SDLO*.
   Finally, every name are /CamelCase/.

*** Examples

    *SDL_Window* -> *SDLO::Window*
 
    *SDL_GetWindowPosition* -> *SDLO::Window::getPosition*

    *SDL_Renderer* -> *SDLO::Renderer*

    *SDL_RenderSetScale* -> *SDLO::Renderer::setScale*

    Constants have also been re-written in *enum*.

    *SDL_INIT_VIDEO* -> *SDLO::InitFlags::InitVideo*

    *SDL_WINDOW_FULLSCREEN* -> *SDLO::WindowFlags::WindowFullScreen**

** Usage

#+BEGIN_SRC C++
  #include <SDLO/SDL.hpp>
  #include <SDLO/Application.hpp>
  #include <SDLO/Window.hpp>
  #include <SDLO/Renderer.hpp>

  int main()
  {
    // Call to SDL_Init with flag SDL_INIT_VIDEO
    SDLO::init(SDLO::InitVideo);
  
    // Create a resizable window at position (0,0) of size (250, 250)
    SDLO::Window root("Minimal app", 0, 0, SDLO::WindowResizable, 250, 250);

    // Create a hardware accelerated renderer, hooked to root
    SDLO::Renderer renderer(root, SDLO::RenderAccelerated);
  
    SDL_Event event;

    bool quit = false;

    while (!quit)
    {
      // Events handler
      while (SDL_PollEvent(&event) != 0)
      {
	if (event.type == SDL_QUIT)
	{
	  quit = false;
	  break;
	}

	// Handle other events
      }

      // Do stuff 
    }  
    
    // Quit all subsystems
    SDLO::quit();

    return 0;
  }
#+END_SRC

** Others examples

   To see others examples, see my other repo [[https://github.com/lzrdkng/Cobra-Examples][SDLO-Examples]].
